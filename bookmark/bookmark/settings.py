"""
Django settings for bookmark project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

from django.urls import reverse_lazy

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'fo6e_e*%rbnkiuu$g&9+fyl_uljt)0zz+b6lnz=isdoffj$b%z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'mysite.com',
    'localhost',
    '127.0.0.1',
    #'49fd2b63975a.ngrok.io'  # изменяется после каждого запуска ngrok 
]


# Application definition

INSTALLED_APPS = [
    'account.apps.AccountConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'images.apps.ImagesConfig',
    'social_django',
    'sorl.thumbnail',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bookmark.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmark.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'


LOGIN_REDIRECT_URL = 'dashboard'
LOGIN_URL = 'login'
LOGOUT_URL = 'logout'

#    LOGIN_REDIRECT_URL – указывает адрес, куда Django будет перенаправлять
# пользователя при успешной авторизации, если не указан GET-параметр next;

#    LOGIN_URL  – адрес, куда нужно перенаправлять пользователя для входа
# в систему, например из обработчиков с декоратором login_required;

#    LOGOUT_URL – адрес, перейдя по которому, пользователь выйдет из своего
# аккаунта.

# Для отправки сообщения mail на консоль
#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Для отправки на mail с указаной почты
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'ivtob902.1@gmail.com'
EMAIL_HOST_PASSWORD = 'NoMercy2017'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

# это базовый URL, от которого будут формироваться адреса файлов
MEDIA_URL = '/media/'

# путь в файловой системе, где эти файлы будут храниться. Мы
# не задаем этот путь явно, а используем BASE_DIR, чтобы наш код был универсальным.
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# Django будет использовать бэкэнды по порядку, поэтому
# теперь пользователь сможет аутентифицироваться и с помощью электронной
# почты. Идентификационные данные сначала будут проверены ModelBackend.
# Если этот бэкэнд не вернет объект пользователя,
# Django попробует аутентифицировать его с помощью нашего класса, EmailAuthBackend.

AUTHENTICATION_BACKENDS = [
    'social_core.backends.vk.VKOAuth2',
    'django.contrib.auth.backends.ModelBackend',
    'account.authentication.EmailAuthBackend',
]

VK_APP_ID = 'app_id'
VKONTAKTE_APP_ID = VK_APP_ID
VK_API_SECRET = 'key_api_secret'
VKONTAKTE_APP_SECRET = VK_API_SECRET

SOCIAL_AUTH_VK_OAUTH2_KEY = '7721501'
SOCIAL_AUTH_VK_OAUTH2_SECRET = 'JdgXwVkLSbWX7xm4Y1MN'
SOCIAL_AUTH_VK_OAUTH2_SCOPE = ['email']

ABSOLUTE_URL_OVERRIDES = {
 'auth.user': lambda u: reverse_lazy('user_detail', args=[u.username])
}

THUMBNAIL_DEBUG = True